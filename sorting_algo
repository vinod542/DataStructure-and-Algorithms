#sorting_algo
#Bubble sort
def Bubble_sort(arr):
    for i in range(len(arr)-1,0,-1):
        for j in range(i):
            if arr[i] < arr[j]:
                temp = arr[i]
                arr[i] = arr[j]
                arr[j] = temp

#selection sort #find the smallest element in the array and swap it to first
def Selection_sort(arr):
    n= len(arr)
    for i in range(n-1,0,-1):
        position = 0
        for j in range(1,i+1):
            if arr[position] < arr[j]:
                position = j
        temp = arr[i]
        arr[i] = arr[position]
        arr[position]=temp
print arr

#linear way
def test_sort(arr):
    for i in range(0, len(arr)):
        for j in range(i):
            if arr[i] > arr[j]:
                temp = arr[i]
                arr[i] = arr[j]
                arr[j] = temp
            print arr
                
                
#Merge sort algorithm.
def mergeSort(a):
    if len(a) > 1:
        midd = len(a)/2
        lefthalf = a[:midd]
        righthalf = a[midd:]
        
        mergeSort(lefthalf)
        mergeSort(righthalf)

        i=0
        j=0
        k=0
        while i < len(lefthalf) and j < len(righthalf):
            if lefthalf[i] < righthalf[j]:
                a[k] = lefthalf[i]
                i = i+1
            else:
                a[k] = righthalf[j]
                j = j+1
            k = k+1
        while i < len(lefthalf):
            a[k] = lefthalf[i]
            i = i+1
            k = k+1
        while j < len(righthalf):
            a[k] = righthalf[j]
            j = j+1
            k = k+1
    print a

#insertion sort
#a = [44, 12, 55, 7, 67, 87]
def insertionSort(a):
    for i in range(1, len(a)-1):
        current_value = a[i]
        index = i
        while index > 0 and a[index-1] > current_value:
            a[index] = a[index-1]
            index = index-1
            a[index] = current_value
    print a

